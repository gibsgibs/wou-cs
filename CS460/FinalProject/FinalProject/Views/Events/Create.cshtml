@model FinalProject.Models.Event

@{
    ViewBag.Title = "Create";
}

<div class="container-fluid pt-3">
    <div class="row d-flex justify-content-center">
        <div class="col-lg-8">
            @if (ViewBag.DateError == true)
            {
                <h3 class="text-danger text-center py-3">
                    An event cannot be created before today
                </h3>
            }
            @using (Html.BeginForm(new { @class = "container-fluid d-flex justifiy" }))
            {
                @Html.AntiForgeryToken()

                <div>
                    <h4>Event</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Start, new
                            {
                                @type = "date",
                                @class = "form-control datepicker",
                                min = "1754/01/01",
                                max = "9999/12/31"
                            })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Coordinator, "Coordinator", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Coordinator", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group d-flex m-0">
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-primary mr-auto" })
                        <input type="submit" value="Create" class="btn btn-success ml-auto" />
                    </div>
                </div>
            }
        </div><!--/col-lg-8-->
    </div><!--/row-->
</div><!--/container-fluid-->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
