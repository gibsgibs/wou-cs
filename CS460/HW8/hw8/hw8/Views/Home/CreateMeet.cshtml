@model hw8.Models.Meet

@{
    ViewBag.Title = "Add Meet";
}

<div class="container-fluid pt-5">
    <div class="row d-flex justify-content-center">
        <div class="col-lg-8">
            @if (ViewBag.MeetError == true)
            {
                <h3 class="text-danger text-center py-3">
                    There is already a meed there at that time.
                </h3>
            }
            else if (ViewBag.Error == false)
            {
                <h3 class="text-success text-center py-3">
                    Your entry was added to the system!
                </h3>
            }
            <div class="card shadow">
                <div class="card-header text-center text-light bg-dark py-2">
                    <h5 class="m-0">
                        Add a New Meet
                    </h5>
                </div>
                <div class="card-body d-flex justify-content-center">
                    @using (Html.BeginForm("CreateMeet", "Home", FormMethod.Post, new { @class = "container-fluid p-0" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text text-light bg-dark">
                                        @Html.LabelFor(model => model.Location, htmlAttributes: new
                                        {
                                            id = "inputLabel"
                                        })
                                    </div>
                                </div>
                                @Html.EditorFor(model => model.Location, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control"
                                    }
                                })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text text-light bg-dark">
                                        @Html.LabelFor(model => model.Date, htmlAttributes: new
                                        {
                                            id = "inputLabel"
                                        })
                                    </div>
                                </div>
                                @Html.TextBoxFor(model => model.Date, new
                                {
                                    @type = "date",
                                    @class = "form-control datepicker",
                                    min = "1754/01/01/",
                                    max = "9999/12/31"
                                })
                            </div>
                        </div>
                        <div class="form-group d-flex m-0">
                            @Html.ActionLink("Home", "Index", null, new
                            {
                                @class = "btn btn-primary mr-auto"
                            })
                            <input type="submit" value="Add" class="btn btn-success ml-auto" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}